# DO NOT MODIFY. THIS FILE WAS AUTO-GENERATED.

# manifest for running `hello` from LMBench.
#
# This manifest was prepared and tested on Ubuntu 16.04.

# The executable to load in Graphene.
loader.exec = file:hello

# Graphene environment, including the path of the library OS and the debug
# option (inline/none).
loader.preload = file:./sgx-nacl/scons-out/sgx/sel_loader_sgx
loader.debug_type = none

# Environment variables
loader.env.LD_LIBRARY_PATH = /lib

# Mounted FSes. The following "chroot" FSes mount a part of the host FS into the
# guest. Other parts of the host FS will not be available in the guest.

# Default glibc files, mounted from the Runtime directory in GRAPHENEDIR.
fs.mount.lib.type = chroot
fs.mount.lib.path = /lib
fs.mount.lib.uri = file:../../../../../../../../Runtime

# SGX general options

# Set the virtual memory size of the SGX enclave. For SGX v1, the enclave size
# must be specified during signing. If the program needs more virtual memory than
# the enclave size, Graphene will not be able to allocate it.
sgx.enclave_size = 60G

# Set the maximum number of enclave threads. For SGX v1, the number of enclave
# TCSes must be specified during signing, so the application cannot use more
# threads than the number of TCSes. Note that Graphene also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).
sgx.thread_num = 1

# SGX trusted libraries
sgx.trusted_files.ld = file:../../../../../../../../Runtime/ld-linux-x86-64.so.2
sgx.trusted_files.libc = file:../../../../../../../../Runtime/libc.so.6

# Generated by Graphene

sgx.allow_file_creation = 0
sgx.isvprodid = 0
sgx.isvsvn = 0
sgx.sigfile = file:hello.sig
sgx.static_address = 1
sgx.trusted_checksum.exec = f38c10343b93ecf223854acb73377ab50a59cf76b4a51825e4944e5071ac5974
sgx.trusted_checksum.ld = 2444625a5efba9f8dfa769aabb7ecd5e37f780609f9b1b18cb1bda2d9d23c181
sgx.trusted_checksum.libc = 1ce3a128df96d548e3333d54e28019c7584d4266ebdc5bbb0e71515db5cfe237
sgx.trusted_checksum.preload0 = 215f187c5f6dc74eb0bd1cc874a3427c51b16ba5ebd2b18a6f282f326c804ba1
